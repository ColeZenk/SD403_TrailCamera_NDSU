
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.46+11 (git sha1 0200a7680, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)

-- Running command `read_verilog top.v; synth_gowin -top top -json fpga_out.json' --

1. Executing Verilog-2005 frontend: top.v
Parsing Verilog input from `top.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

2. Executing SYNTH_GOWIN pass.

2.1. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\ELVDS_OBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\OSER4'.
Generating RTLIL representation for module `\OSER4_MEM'.
Generating RTLIL representation for module `\OSER8'.
Generating RTLIL representation for module `\OSER10'.
Generating RTLIL representation for module `\OVIDEO'.
Generating RTLIL representation for module `\OSER16'.
Generating RTLIL representation for module `\IDES4'.
Generating RTLIL representation for module `\IDES4_MEM'.
Generating RTLIL representation for module `\IDES8'.
Generating RTLIL representation for module `\IDES10'.
Generating RTLIL representation for module `\IVIDEO'.
Generating RTLIL representation for module `\IDES16'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDRC'.
Generating RTLIL representation for module `\DQS'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\BANDGAP'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Generating RTLIL representation for module `\OSCW'.
Generating RTLIL representation for module `\OSCO'.
Generating RTLIL representation for module `\DCS'.
Generating RTLIL representation for module `\EMCU'.
Successfully finished Verilog frontend.

2.2. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_xtra.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\MUX2_MUX8'.
Generating RTLIL representation for module `\MUX2_MUX16'.
Generating RTLIL representation for module `\MUX2_MUX32'.
Generating RTLIL representation for module `\MUX4'.
Generating RTLIL representation for module `\MUX8'.
Generating RTLIL representation for module `\MUX16'.
Generating RTLIL representation for module `\MUX32'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT7'.
Generating RTLIL representation for module `\LUT8'.
Generating RTLIL representation for module `\DL'.
Generating RTLIL representation for module `\DLE'.
Generating RTLIL representation for module `\DLC'.
Generating RTLIL representation for module `\DLCE'.
Generating RTLIL representation for module `\DLP'.
Generating RTLIL representation for module `\DLPE'.
Generating RTLIL representation for module `\DLN'.
Generating RTLIL representation for module `\DLNE'.
Generating RTLIL representation for module `\DLNC'.
Generating RTLIL representation for module `\DLNCE'.
Generating RTLIL representation for module `\DLNP'.
Generating RTLIL representation for module `\DLNPE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\IEM'.
Generating RTLIL representation for module `\ROM16'.
Generating RTLIL representation for module `\ROM'.
Generating RTLIL representation for module `\ROMX9'.
Generating RTLIL representation for module `\rSDP'.
Generating RTLIL representation for module `\rSDPX9'.
Generating RTLIL representation for module `\rROM'.
Generating RTLIL representation for module `\rROMX9'.
Generating RTLIL representation for module `\pROM'.
Generating RTLIL representation for module `\pROMX9'.
Generating RTLIL representation for module `\SDPB'.
Generating RTLIL representation for module `\SDPX9B'.
Generating RTLIL representation for module `\DPB'.
Generating RTLIL representation for module `\DPX9B'.
Generating RTLIL representation for module `\PADD18'.
Generating RTLIL representation for module `\PADD9'.
Generating RTLIL representation for module `\MULT9X9'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT36X36'.
Generating RTLIL representation for module `\MULTALU36X18'.
Generating RTLIL representation for module `\MULTADDALU18X18'.
Generating RTLIL representation for module `\MULTALU18X18'.
Generating RTLIL representation for module `\ALU54D'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFS'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\TLVDS_IBUF'.
Generating RTLIL representation for module `\TLVDS_TBUF'.
Generating RTLIL representation for module `\TLVDS_IOBUF'.
Generating RTLIL representation for module `\ELVDS_IBUF'.
Generating RTLIL representation for module `\ELVDS_TBUF'.
Generating RTLIL representation for module `\ELVDS_IOBUF'.
Generating RTLIL representation for module `\MIPI_IBUF'.
Generating RTLIL representation for module `\MIPI_IBUF_HS'.
Generating RTLIL representation for module `\MIPI_IBUF_LP'.
Generating RTLIL representation for module `\MIPI_OBUF'.
Generating RTLIL representation for module `\MIPI_OBUF_A'.
Generating RTLIL representation for module `\I3C_IOBUF'.
Generating RTLIL representation for module `\CLKDIV'.
Generating RTLIL representation for module `\DHCEN'.
Generating RTLIL representation for module `\DLL'.
Generating RTLIL representation for module `\DLLDLY'.
Generating RTLIL representation for module `\FLASH96K'.
Generating RTLIL representation for module `\FLASH256K'.
Generating RTLIL representation for module `\FLASH608K'.
Generating RTLIL representation for module `\DQCE'.
Generating RTLIL representation for module `\FLASH128K'.
Generating RTLIL representation for module `\MCU'.
Generating RTLIL representation for module `\USB20_PHY'.
Generating RTLIL representation for module `\ADC'.
Generating RTLIL representation for module `\CLKDIV2'.
Generating RTLIL representation for module `\DCC'.
Generating RTLIL representation for module `\DHCENC'.
Generating RTLIL representation for module `\FLASH64K'.
Generating RTLIL representation for module `\FLASH64KZ'.
Generating RTLIL representation for module `\I3C'.
Generating RTLIL representation for module `\IODELAYA'.
Generating RTLIL representation for module `\IODELAYC'.
Generating RTLIL representation for module `\SPMI'.
Generating RTLIL representation for module `\IODELAYB'.
Generating RTLIL representation for module `\PLLO'.
Generating RTLIL representation for module `\DCCG'.
Generating RTLIL representation for module `\FLASH96KA'.
Generating RTLIL representation for module `\MIPI_DPHY_RX'.
Generating RTLIL representation for module `\CLKDIVG'.
Successfully finished Verilog frontend.

2.3. Executing HIERARCHY pass (managing design hierarchy).

2.3.1. Analyzing design hierarchy..
Top module:  \top

2.3.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.4. Executing PROC pass (convert processes to netlists).

2.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$231'.
Cleaned up 1 empty switch.

2.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291 in module RAM16S4.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255 in module RAM16S2.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$236 in module RAM16S1.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$227 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$225 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$223 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$221 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$219 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$217 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$215 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$213 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$207 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$205 in module DFFC.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$203 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$201 in module DFFP.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$199 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$197 in module DFFR.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$195 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$193 in module DFFS.
Marked 1 switch rules as full_case in process $proc$top.v:9$1 in module top.
Removed a total of 0 dead cases.

2.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 56 assignments to connections.

2.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$336'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
  Set init value: \mem2 = 16'0000000000000000
  Set init value: \mem3 = 16'0000000000000000
Found init rule in `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$278'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
Found init rule in `\RAM16S1.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$248'.
  Set init value: \mem = 16'0000000000000000
Found init rule in `\DFFNCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$228'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$226'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$224'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$222'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$220'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$218'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$216'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$214'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$212'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$204'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$202'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$200'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$198'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$196'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$194'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$192'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$190'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$top.v:7$5'.
  Set init value: \counter = 27'000000000000000000000000000

2.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$227'.
Found async reset \CLEAR in `\DFFNC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$225'.
Found async reset \PRESET in `\DFFNPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$223'.
Found async reset \PRESET in `\DFFNP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$221'.
Found async reset \CLEAR in `\DFFCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$207'.
Found async reset \CLEAR in `\DFFC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$205'.
Found async reset \PRESET in `\DFFPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$203'.
Found async reset \PRESET in `\DFFP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$201'.
Found async reset \rst_n in `\top.$proc$top.v:9$1'.

2.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~21 debug messages>

2.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$336'.
Creating decoders for process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
     1/8: $1$lookahead\mem3$290[15:0]$307
     2/8: $1$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1131$282[3:0]$303
     3/8: $1$lookahead\mem2$289[15:0]$306
     4/8: $1$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1130$281[3:0]$302
     5/8: $1$lookahead\mem1$288[15:0]$305
     6/8: $1$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1129$280[3:0]$301
     7/8: $1$lookahead\mem0$287[15:0]$304
     8/8: $1$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1128$279[3:0]$300
Creating decoders for process `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$278'.
Creating decoders for process `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255'.
     1/4: $1$lookahead\mem1$254[15:0]$263
     2/4: $1$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1084$250[3:0]$261
     3/4: $1$lookahead\mem0$253[15:0]$262
     4/4: $1$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1083$249[3:0]$260
Creating decoders for process `\RAM16S1.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$248'.
Creating decoders for process `\RAM16S1.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$236'.
     1/2: $1$lookahead\mem$235[15:0]$240
     2/2: $1$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1045$233[3:0]$239
Creating decoders for process `\ALU.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$231'.
Creating decoders for process `\DFFNCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$228'.
Creating decoders for process `\DFFNCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$227'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$226'.
Creating decoders for process `\DFFNC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$225'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$224'.
Creating decoders for process `\DFFNPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$222'.
Creating decoders for process `\DFFNP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$221'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$220'.
Creating decoders for process `\DFFNRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$219'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$218'.
Creating decoders for process `\DFFNR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$216'.
Creating decoders for process `\DFFNSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$215'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$214'.
Creating decoders for process `\DFFNS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$213'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$212'.
Creating decoders for process `\DFFNE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$210'.
Creating decoders for process `\DFFN.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:366$209'.
Creating decoders for process `\DFFCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$208'.
Creating decoders for process `\DFFCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$207'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$206'.
Creating decoders for process `\DFFC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$205'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$204'.
Creating decoders for process `\DFFPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$202'.
Creating decoders for process `\DFFP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$201'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$200'.
Creating decoders for process `\DFFRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$199'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$198'.
Creating decoders for process `\DFFR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$197'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$196'.
Creating decoders for process `\DFFSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$195'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$194'.
Creating decoders for process `\DFFS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$193'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$192'.
Creating decoders for process `\DFFE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$191'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$190'.
Creating decoders for process `\DFF.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:179$189'.
Creating decoders for process `\top.$proc$top.v:7$5'.
Creating decoders for process `\top.$proc$top.v:16$4'.
Creating decoders for process `\top.$proc$top.v:9$1'.
     1/1: $0\counter[26:0]

2.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RAM16S4.\mem0' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$430' with positive edge clock.
Creating register for signal `\RAM16S4.\mem1' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$431' with positive edge clock.
Creating register for signal `\RAM16S4.\mem2' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$432' with positive edge clock.
Creating register for signal `\RAM16S4.\mem3' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$433' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1128$279' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$434' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1129$280' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$435' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1130$281' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$436' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1131$282' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$437' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem0$287' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$438' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem1$288' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$439' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem2$289' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$440' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem3$290' using process `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
  created $dff cell `$procdff$441' with positive edge clock.
Creating register for signal `\RAM16S2.\mem0' using process `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255'.
  created $dff cell `$procdff$442' with positive edge clock.
Creating register for signal `\RAM16S2.\mem1' using process `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255'.
  created $dff cell `$procdff$443' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1083$249' using process `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255'.
  created $dff cell `$procdff$444' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1084$250' using process `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255'.
  created $dff cell `$procdff$445' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem0$253' using process `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255'.
  created $dff cell `$procdff$446' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem1$254' using process `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255'.
  created $dff cell `$procdff$447' with positive edge clock.
Creating register for signal `\RAM16S1.\mem' using process `\RAM16S1.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$236'.
  created $dff cell `$procdff$448' with positive edge clock.
Creating register for signal `\RAM16S1.$bitselwrite$pos$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1045$233' using process `\RAM16S1.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$236'.
  created $dff cell `$procdff$449' with positive edge clock.
Creating register for signal `\RAM16S1.$lookahead\mem$235' using process `\RAM16S1.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$236'.
  created $dff cell `$procdff$450' with positive edge clock.
Creating register for signal `\ALU.\C' using process `\ALU.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$231'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$231'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$227'.
  created $adff cell `$procdff$453' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$225'.
  created $adff cell `$procdff$456' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$223'.
  created $adff cell `$procdff$459' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$221'.
  created $adff cell `$procdff$462' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$219'.
  created $dff cell `$procdff$463' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$217'.
  created $dff cell `$procdff$464' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$215'.
  created $dff cell `$procdff$465' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$213'.
  created $dff cell `$procdff$466' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$211'.
  created $dff cell `$procdff$467' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:366$209'.
  created $dff cell `$procdff$468' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$207'.
  created $adff cell `$procdff$471' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$205'.
  created $adff cell `$procdff$474' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$203'.
  created $adff cell `$procdff$477' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$201'.
  created $adff cell `$procdff$480' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$199'.
  created $dff cell `$procdff$481' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$197'.
  created $dff cell `$procdff$482' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$195'.
  created $dff cell `$procdff$483' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$193'.
  created $dff cell `$procdff$484' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$191'.
  created $dff cell `$procdff$485' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:179$189'.
  created $dff cell `$procdff$486' with positive edge clock.
Creating register for signal `\top.\led' using process `\top.$proc$top.v:16$4'.
  created $dff cell `$procdff$487' with positive edge clock.
Creating register for signal `\top.\counter' using process `\top.$proc$top.v:9$1'.
  created $adff cell `$procdff$492' with positive edge clock and positive level reset.

2.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$336'.
Found and cleaned up 1 empty switch in `\RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
Removing empty process `RAM16S4.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1126$291'.
Removing empty process `RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$278'.
Found and cleaned up 1 empty switch in `\RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255'.
Removing empty process `RAM16S2.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1081$255'.
Removing empty process `RAM16S1.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$248'.
Found and cleaned up 1 empty switch in `\RAM16S1.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$236'.
Removing empty process `RAM16S1.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:1043$236'.
Removing empty process `ALU.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$231'.
Removing empty process `DFFNCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$228'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$227'.
Removing empty process `DFFNCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:535$227'.
Removing empty process `DFFNC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$226'.
Removing empty process `DFFNC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:515$225'.
Removing empty process `DFFNPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$224'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$223'.
Removing empty process `DFFNPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:496$223'.
Removing empty process `DFFNP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$222'.
Removing empty process `DFFNP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:476$221'.
Removing empty process `DFFNRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$220'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$219'.
Removing empty process `DFFNRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:457$219'.
Removing empty process `DFFNR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$218'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$217'.
Removing empty process `DFFNR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:437$217'.
Removing empty process `DFFNSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$216'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$215'.
Removing empty process `DFFNSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:418$215'.
Removing empty process `DFFNS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$214'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$213'.
Removing empty process `DFFNS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:398$213'.
Removing empty process `DFFNE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$212'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$211'.
Removing empty process `DFFNE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:381$211'.
Removing empty process `DFFN.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$210'.
Removing empty process `DFFN.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:366$209'.
Removing empty process `DFFCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$208'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$207'.
Removing empty process `DFFCE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:348$207'.
Removing empty process `DFFC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$206'.
Removing empty process `DFFC.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:328$205'.
Removing empty process `DFFPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$204'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$203'.
Removing empty process `DFFPE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:309$203'.
Removing empty process `DFFP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$202'.
Removing empty process `DFFP.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:289$201'.
Removing empty process `DFFRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$200'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$199'.
Removing empty process `DFFRE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:270$199'.
Removing empty process `DFFR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$198'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$197'.
Removing empty process `DFFR.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:250$197'.
Removing empty process `DFFSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$196'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$195'.
Removing empty process `DFFSE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:231$195'.
Removing empty process `DFFS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$194'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$193'.
Removing empty process `DFFS.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:211$193'.
Removing empty process `DFFE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$192'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$191'.
Removing empty process `DFFE.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:194$191'.
Removing empty process `DFF.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:0$190'.
Removing empty process `DFF.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:179$189'.
Removing empty process `top.$proc$top.v:7$5'.
Removing empty process `top.$proc$top.v:16$4'.
Removing empty process `top.$proc$top.v:9$1'.
Cleaned up 21 empty switches.

2.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.5. Executing FLATTEN pass (flatten design).

2.6. Executing TRIBUF pass.

2.7. Executing DEMINOUT pass (demote inout ports to input or output).

2.8. Executing SYNTH pass.

2.8.1. Executing PROC pass (convert processes to netlists).

2.8.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.8.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.8.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.8.1.4. Executing PROC_INIT pass (extract init attributes).

2.8.1.5. Executing PROC_ARST pass (detect async resets in processes).

2.8.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.8.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.8.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.8.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.8.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.8.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.8.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.8.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.8.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 5 unused wires.
<suppressed ~3 debug messages>

2.8.4. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.8.5. Executing OPT pass (performing simple optimizations).

2.8.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.8.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.8.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.8.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.8.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.8.5.6. Executing OPT_DFF pass (perform DFF optimizations).

2.8.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.8.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.8.5.9. Finished OPT passes. (There is nothing left to do.)

2.8.6. Executing FSM pass (extract and optimize FSM).

2.8.6.1. Executing FSM_DETECT pass (finding FSMs in design).

2.8.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.8.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.8.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.8.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.8.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.8.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.8.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.8.7. Executing OPT pass (performing simple optimizations).

2.8.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.8.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.8.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.8.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.8.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.8.7.6. Executing OPT_DFF pass (perform DFF optimizations).

2.8.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.8.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.8.7.9. Finished OPT passes. (There is nothing left to do.)

2.8.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:13$3 ($add).
Removed top 5 bits (of 32) from port Y of cell top.$add$top.v:13$3 ($add).

2.8.9. Executing PEEPOPT pass (run peephole optimizers).

2.8.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.8.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top.v:13$3 ($add).
  creating $alu model for $macc $add$top.v:13$3.
  creating $alu cell for $add$top.v:13$3: $auto$alumacc.cc:485:replace_alu$493
  created 1 $alu and 0 $macc cells.

2.8.12. Executing SHARE pass (SAT-based resource sharing).

2.8.13. Executing OPT pass (performing simple optimizations).

2.8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.8.13.6. Executing OPT_DFF pass (perform DFF optimizations).

2.8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.8.13.9. Finished OPT passes. (There is nothing left to do.)

2.8.14. Executing MEMORY pass.

2.8.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.8.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.8.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

2.8.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.8.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

2.8.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.8.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.8.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.8.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.8.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.8.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.9. Executing MEMORY_LIBMAP pass (mapping memories to cells).

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

2.10.2. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/brams_map.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

2.10.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.3. Executing OPT_DFF pass (perform DFF optimizations).

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.5. Finished fast OPT passes.

2.12. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_DFF pass (perform DFF optimizations).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.9. Finished OPT passes. (There is nothing left to do.)

2.14. Executing TECHMAP pass (map to technology primitives).

2.14.1. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.14.2. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/arith_map.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_gw1n_alu'.
Successfully finished Verilog frontend.

2.14.3. Continuing TECHMAP pass.
Using template $paramod$956e79e8f8c5e64be7438155ae50a966e615cb04\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~126 debug messages>

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~81 debug messages>

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.15.3. Executing OPT_DFF pass (perform DFF optimizations).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 43 unused wires.
<suppressed ~2 debug messages>

2.15.5. Finished fast OPT passes.

2.16. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port top.clk using IBUF.
Mapping port top.led using OBUF.
Mapping port top.rst_n using IBUF.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.18. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.19. Executing TECHMAP pass (map to technology primitives).

2.19.1. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.19.2. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~56 debug messages>

2.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21. Executing SIMPLEMAP pass (map simple cells to gate primitives).

2.22. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

2.23. Executing ABC9 pass.

2.23.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.23.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.23.3. Executing PROC pass (convert processes to netlists).

2.23.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$1016'.
Cleaned up 1 empty switch.

2.23.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.23.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 4 assignments to connections.

2.23.3.4. Executing PROC_INIT pass (extract init attributes).

2.23.3.5. Executing PROC_ARST pass (detect async resets in processes).

2.23.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.23.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$1016'.

2.23.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.23.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.\C' using process `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$1016'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.\S' using process `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$1016'.
  created direct connection (no actual register cell created).

2.23.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.23.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_sim.v:969$1016'.
Cleaned up 0 empty switches.

2.23.3.12. Executing OPT_EXPR pass (perform const folding).

2.23.4. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module top.
Found 0 SCCs.

2.23.5. Executing ABC9_OPS pass (helper functions for ABC9).

2.23.6. Executing PROC pass (convert processes to netlists).

2.23.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.23.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.23.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.23.6.4. Executing PROC_INIT pass (extract init attributes).

2.23.6.5. Executing PROC_ARST pass (detect async resets in processes).

2.23.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.23.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.23.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.23.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.23.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.23.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.23.6.12. Executing OPT_EXPR pass (perform const folding).

2.23.7. Executing TECHMAP pass (map to technology primitives).

2.23.7.1. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.23.7.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~253 debug messages>

2.23.8. Executing OPT pass (performing simple optimizations).

2.23.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DFFC.

2.23.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DFFC'.
Removed a total of 0 cells.

2.23.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DFFC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.23.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DFFC.
Performed a total of 0 changes.

2.23.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DFFC'.
Removed a total of 0 cells.

2.23.8.6. Executing OPT_DFF pass (perform DFF optimizations).

2.23.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DFFC..

2.23.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module DFFC.

2.23.8.9. Finished OPT passes. (There is nothing left to do.)

2.23.9. Executing TECHMAP pass (map to technology primitives).

2.23.9.1. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

2.23.9.2. Continuing TECHMAP pass.
Using template DFFC for cells of type DFFC.
No more expansions possible.
<suppressed ~30 debug messages>

2.23.10. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Replacing existing blackbox module `$__ABC9_DELAY' at /home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_model.v:2.1-7.10.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Replacing existing blackbox module `$__ABC9_SCC_BREAKER' at /home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_model.v:9.1-11.10.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Replacing existing module `$__DFF_N__$abc9_flop' at /home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_model.v:14.1-20.10.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Replacing existing module `$__DFF_P__$abc9_flop' at /home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_model.v:23.1-29.10.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

2.23.11. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~8 debug messages>

2.23.12. Executing ABC9_OPS pass (helper functions for ABC9).

2.23.13. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

2.23.14. Executing TECHMAP pass (map to technology primitives).

2.23.14.1. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.23.14.2. Continuing TECHMAP pass.
Using template $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010 for cells of type $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~261 debug messages>

2.23.15. Executing OPT pass (performing simple optimizations).

2.23.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.23.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.23.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.23.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.23.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.23.15.6. Executing OPT_DFF pass (perform DFF optimizations).

2.23.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

2.23.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.23.15.9. Rerunning OPT passes. (Maybe there is more to do..)

2.23.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.23.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.23.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.23.15.13. Executing OPT_DFF pass (perform DFF optimizations).

2.23.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.23.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.23.15.16. Finished OPT passes. (There is nothing left to do.)

2.23.16. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 5 cells with 35 new cells, skipped 9 cells.
  replaced 2 cell types:
       3 $_XOR_
       2 $_MUX_
  not replaced 2 cell types:
       8 $specify2
       1 $_NOT_

2.23.17. Executing AIGMAP pass (map logic to AIG).
Module top: replaced 0 cells with 0 new cells, skipped 128 cells.
  not replaced 8 cell types:
      27 $_NOT_
       6 DFF
      27 DFFC
       2 IBUF
       6 OBUF
       6 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001001000000
      27 DFFC_$abc9_byp
      27 $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010

2.23.17.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.23.17.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.23.17.3. Executing XAIGER backend.
<suppressed ~44 debug messages>
Extracted 0 AND gates and 159 wires from module `top' to a netlist network with 43 inputs and 73 outputs.

2.23.17.4. Executing ABC9_EXE pass (technology mapping using ABC9).

2.23.17.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     43/     73  and =       0  lev =    0 (0.00)  mem = 0.01 MB  box = 60  bb = 33
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 6 carries.
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     43/     73  and =       0  lev =    0 (0.00)  mem = 0.01 MB  ch =    0  box = 60  bb = 33
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 6 carries.
ABC: + &if -W 500 -v 
ABC: K = 8. Memory (bytes): Truth =    0. Cut =   68. Obj =  152. Set =  708. CutMin = no
ABC: Node =       0.  Ch =     0.  Total mem =    0.06 MB. Peak cut mem =    0.00 MB.
ABC: P:  Del = 7045.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: P:  Del = 7045.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: P:  Del = 7045.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: F:  Del = 7045.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: A:  Del = 7045.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: A:  Del = 7045.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: Total time =     0.00 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: The network is not changed by "&mfs".
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =     43/     73  and =       0  lev =    0 (0.00)  mem = 0.01 MB  box = 60  bb = 33
ABC: Mapping (K=0)  :  lut =      0  edge =       0  lev =    0 (0.00)  levB =   28  mem = 0.00 MB
ABC: LUT = 0 : Ave = 0.00
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 6 carries.
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.02 seconds, total: 0.02 seconds

2.23.17.6. Executing AIGER frontend.
<suppressed ~244 debug messages>
Removed 0 unused cells and 379 unused wires.

2.23.17.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:        2
ABC RESULTS:   \DFFC_$abc9_byp cells:       27
ABC RESULTS:   $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010 cells:       27
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       37
Removing temp directory.

2.23.18. Executing TECHMAP pass (map to technology primitives).

2.23.18.1. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

2.23.18.2. Continuing TECHMAP pass.
Using template DFFC_$abc9_byp for cells of type DFFC_$abc9_byp.
Using template $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010 for cells of type $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.
No more expansions possible.
<suppressed ~61 debug messages>
Removed 0 unused cells and 701 unused wires.

2.24. Executing TECHMAP pass (map to technology primitives).

2.24.1. Executing Verilog-2005 frontend: /home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/home/cole-zenk/oss-cad-suite/lib/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.24.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
No more expansions possible.
<suppressed ~38 debug messages>

2.25. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in top.

2.26. Executing SETUNDEF pass (replace undef values with defined constants).

2.27. Executing HILOMAP pass (mapping to constant drivers).
Removed 0 unused cells and 4 unused wires.

2.28. Executing AUTONAME pass.
Renamed 462 objects in module top (19 iterations).
<suppressed ~134 debug messages>

2.29. Executing HIERARCHY pass (managing design hierarchy).

2.29.1. Analyzing design hierarchy..
Top module:  \top

2.29.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.30. Printing statistics.

=== top ===

   Number of wires:                 65
   Number of wire bits:            101
   Number of public wires:          65
   Number of public wire bits:     101
   Number of ports:                  3
   Number of port bits:              8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 72
     ALU                            27
     DFF                             6
     DFFC                           27
     GND                             1
     IBUF                            2
     LUT1                            2
     OBUF                            6
     VCC                             1

2.31. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.32. Executing JSON backend.

End of script. Logfile hash: 6d36526a68, CPU: user 1.71s system 0.07s, MEM: 39.98 MB peak
Yosys 0.46+11 (git sha1 0200a7680, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 27% 20x read_verilog (0 sec), 9% 1x abc9_exe (0 sec), ...
